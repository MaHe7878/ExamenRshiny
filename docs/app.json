[{"name":"app.R","content":"library(shiny)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(glue)\nlibrary(DT)\nlibrary(bslib)\nlibrary(thematic)\n\nthematic_shiny(font = \"Minty\")\n\nui <- fluidPage(\n  theme = bs_theme(\n    version = 5,\n    bootswatch = \"minty\" \n  ),\n  h2(\"Exploration des Diamants\"),\n  sidebarLayout(\n    sidebarPanel(\n      radioButtons(\n        inputId = \"choix_rose\", \n        label = \"Colorier les points en rose ?\", \n        choices = c(\"Oui\" = \"opt1\", \"Non\" = \"opt2\")\n      ),\n      selectInput(\n        inputId = \"choix_couleur\",\n        choices = c(\"D\", \"E\",\"F\", \"G\", \"H\", \"I\", \"J\"),\n        label = \"Choisir une couleur Ã  filtrer :\",\n        selected = NULL,\n        multiple = FALSE,\n        selectize = TRUE,\n        width = NULL,\n        size = NULL\n      ),\n      sliderInput(\n        inputId = \"prix\",\n        label = \"Prix maximum :\",\n        min = 300,\n        max = 20000,\n        value = 5000\n      ),\n      textOutput(outputId = \"Bouton\"),\n      actionButton(\n        inputId = \"bouton\",\n        label = \"Afficher une notification\"\n      )\n    ),\n    mainPanel(\n      plotOutput(\"DiamondPlot\"),\n      DTOutput(outputId = \"DiamondTable\")\n    )\n  ),\n\n)\n\nserver <- function(input, output) {\n  output$DiamondPlot <- renderPlot({\n    diamonds |>\n      filter(price <= input$prix) |>\n      filter(color %in% input$choix_couleur) |>\n      ggplot(aes(x = carat, y = price)) +\n      geom_point(\n        color = ifelse(input$choix_rose == \"opt1\", \"#ffc4cf\", \"#5f5f5f\"))+\n      labs(\n        title = glue(\"prix: {input$prix} & color: {input$choix_couleur}\")\n      )\n  })\n  \n  output$DiamondTable <- renderDT({\n    diamonds |>\n      select(carat, cut, color, clarity, depth, table, price) |>\n      # filter(price > input$prix) |>  Le tableau final se modifie sans le prix\n      filter(color %in% input$choix_couleur)\n  })\n  \n  observeEvent(input$bouton, {\n    showNotification(\n      glue(\"prix: {input$prix} & color: {input$choix_couleur}\"),\n      type = \"message\"\n    )\n  })\n}\n\n\nshinyApp(ui = ui, server = server)","type":"text"}]
